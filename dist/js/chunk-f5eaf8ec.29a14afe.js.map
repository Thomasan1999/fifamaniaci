{"version":3,"sources":["webpack:///./src/components/LogoutForm.vue?0733","webpack:///./src/components/LogoutForm.vue","webpack:///./src/components/LogoutForm.vue?63ba","webpack:///./src/components/LogoutForm.vue?bc58","webpack:///./src/mixins/RegistrationLoginForm.ts","webpack:///./src/mixins/Form.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","urlFullGet","domProps","_s","texts","user","logout","on","$event","preventDefault","formSubmit","auth","staticRenderFns","Main","RegistrationLoginForm","tableName","method","url","name","component","RegistrationLoginFormMixin","element","unique","input","validateRegex","test","value","errorShow","checking","Promise","resolve","reject","foundUser","Object","entries","$store","state","users","find","userId","then","taken","catch","finally","computedPropertiesUpdate","availabilityCheck","inputting","alertType","alertTypeGet","errorShowUpdate","FormMixin","alertTypes","required","emptyIs","length","max","min","type","valueDefault","alertTypesActive","elements","elementsExtra","formData","alertShow","targetType","$options","formDataUpdate","validLength","lengthValidityGet","valid","validityGet","sendable","tag","reference","id","$dayjs","format","parseFloat","parseInt","$set","alertSuccessful","categoryInclude","validate","alertShowSuccessful","values","forEach","propertiesUpdate","props","responseOn","body","headers","ok","status","invalidOn","elementName","$String","caseTrainTo","$Range","includes","toString","prop","res","Boolean","hostname","elementsAll","filter","some","defaults","autocomplete","default","email","password","boolean","float","integer","fbLink","message","username","usernamesInGamePs","usernamesInGamePc","usernamesInGameXbox","prefix","idUsername","alphabetical","alphabeticalExtended","alphanumerical","alphanumericalExtended","any","hexadecimal","visibility","defaultValue","keys","valueNew","eval","replace","match"],"mappings":"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","file":"js/chunk-f5eaf8ec.29a14afe.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{staticClass:\"logout-form\",attrs:{\"action\":_vm.urlFullGet()}},[_c('a',{attrs:{\"href\":\"\"},domProps:{\"innerHTML\":_vm._s(_vm.texts.user.logout)},on:{\"click\":function($event){$event.preventDefault();return _vm.formSubmit({auth: true})}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\nimport {mixins}                   from 'vue-class-component';\nimport {Component}                from 'vue-property-decorator';\nimport MainMixin                  from '@/mixins/Main';\nimport RegistrationLoginFormMixin from '@/mixins/RegistrationLoginForm';\n\n@Component({\n    name: `LogoutForm`\n})\nexport default class LogoutForm extends mixins(MainMixin, RegistrationLoginFormMixin)\n{\n    // public async responseOn(res): Promise<void>\n    // {\n        // if (!res.ok)\n        // {\n        //     return;\n        // }\n\n        // return this.$store.dispatch(`logout`).catch((err) =>\n        // {\n        //     console.error(err);\n        //     return Promise.reject(err);\n        // });\n    // }\n\n    public tableName: string = `users`;\n    public method: 'patch' = `patch`;\n    public url: string = `logout`;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogoutForm.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LogoutForm.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LogoutForm.vue?vue&type=template&id=30e3a26a&scoped=true&\"\nimport script from \"./LogoutForm.vue?vue&type=script&lang=ts&\"\nexport * from \"./LogoutForm.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30e3a26a\",\n  null\n  \n)\n\nexport default component.exports","import {mixins}    from 'vue-class-component';\r\nimport {Component} from 'vue-property-decorator';\r\nimport MainMixin   from '@/mixins/Main';\r\nimport FormMixin   from '@/mixins/Form';\r\n\r\n@Component({\r\n    name: `RegistrationLoginFormMixin`\r\n})\r\nexport default class RegistrationLoginFormMixin extends mixins(MainMixin, FormMixin)\r\n{\r\n    public async availabilityCheck({element}: {element: FormElement}): Promise<void>\r\n    {\r\n        if (element.unique === false)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if (element.input !== `password` && !element.validateRegex.test(element.value))\r\n        {\r\n            element.errorShow = false;\r\n        }\r\n\r\n        if (element.input === `password` || !element.validateRegex.test(element.value))\r\n        {\r\n            return;\r\n        }\r\n\r\n        element.checking = true;\r\n\r\n        new Promise((resolve, reject) =>\r\n        {\r\n            const foundUser = Object.entries(this.$store.state.users.value).find(([userId, user]) =>\r\n            {\r\n                return user[element.name] === element.value;\r\n            });\r\n\r\n            return foundUser ? resolve() : reject();\r\n        }).then(() =>\r\n        {\r\n            element.taken = true;\r\n        }).catch(() =>\r\n        {\r\n            element.taken = false;\r\n        }).finally(() =>\r\n        {\r\n            element.checking = false;\r\n            this.computedPropertiesUpdate({element});\r\n        });\r\n    }\r\n\r\n    public blurOn({element}: {element: FormElement}): void\r\n    {\r\n        this.availabilityCheck({element}).catch(console.error);\r\n        element.inputting = false;\r\n        element.alertType = this.alertTypeGet({element});\r\n        this.errorShowUpdate({element});\r\n    }\r\n}\r\n","import {mixins}          from 'vue-class-component';\r\nimport {Component}       from 'vue-property-decorator';\r\nimport MainMixin         from '@/mixins/Main';\r\n\r\n@Component({\r\n    name: `FormMixin`\r\n})\r\nexport default class FormMixin extends mixins(MainMixin)\r\n{\r\n    public alertShowSuccessful(): void\r\n    {\r\n        this.alertShow({alertType: `successful`, state: `successful`, targetType: this.$options.name});\r\n    }\r\n\r\n    public alertTypeGet({element}: { element: FormElement }): string\r\n    {\r\n        return this.alertTypesActive.find((alertType) =>\r\n        {\r\n            return this.alertTypes[alertType](element);\r\n        }) || ``;\r\n    }\r\n\r\n    public blurOn({element}: { element: FormElement }): void\r\n    {\r\n        element.inputting = false;\r\n        element.alertType = this.alertTypeGet({element});\r\n        this.errorShowUpdate({element});\r\n    }\r\n\r\n    public computedPropertiesUpdate({element}: { element: FormElement }): void\r\n    {\r\n        this.formDataUpdate({element});\r\n        element.validLength = this.lengthValidityGet({element});\r\n        element.valid = this.validityGet({element});\r\n        element.alertType = this.alertTypeGet({element});\r\n        this.errorShowUpdate({element});\r\n    }\r\n\r\n    public errorShowUpdate({element}: { element: FormElement }): void\r\n    {\r\n        element.errorShow = (element.required || !element.emptyIs()) && !element.valid && !element.inputting && !element.checking;\r\n    }\r\n\r\n    public formDataUpdate({element}: { element: FormElement }): void\r\n    {\r\n        if (!element.sendable || element.tag === `span`)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if ((element.emptyIs() && !element.required) || (element.reference && element.valueDefault === element.value))\r\n        {\r\n            delete this.formData[element.name];\r\n            return;\r\n        }\r\n\r\n        const value: any = (() =>\r\n        {\r\n            switch (element.type)\r\n            {\r\n                case `id`:\r\n                case `idUsername`:\r\n                    return element.id || null;\r\n                case `date`:\r\n                    return element.value || this.$dayjs().format();\r\n                case `float`:\r\n                    return parseFloat(element.value) || element.min;\r\n                case `integer`:\r\n                    return parseInt(element.value) || element.min;\r\n                case `boolean`:\r\n                    return element.value;\r\n                default:\r\n                    return element.value === `\\u2002` ? null : (element.value || null);\r\n            }\r\n        })();\r\n\r\n        this.$set(this.formData, element.name, value);\r\n    }\r\n\r\n    public async formSubmit({alertSuccessful = true, categoryInclude = false, auth = false, tableName = this.tableName, url = this.url}: {\r\n        alertSuccessful?: boolean,\r\n        auth?: boolean,\r\n        categoryInclude?: boolean,\r\n        tableName?: string,\r\n        url?: string\r\n    } = {})\r\n    {\r\n        this.validate();\r\n\r\n        if (!this.valid)\r\n        {\r\n            this.invalidOn();\r\n            return;\r\n        }\r\n\r\n        if (alertSuccessful)\r\n        {\r\n            this.alertShowSuccessful();\r\n        }\r\n\r\n        Object.values(this.elements).forEach((element) =>\r\n        {\r\n            this.propertiesUpdate({\r\n                element,\r\n                props: {\r\n                    ...(element.reference ? {valueDefault: element.value} : {value: element.tag === `span` ? element.value : ``})\r\n                }\r\n            });\r\n        });\r\n\r\n        // eslint-disable-next-line no-unused-expressions\r\n        this.responseOn?.({body: {}, headers: {}, ok: true, status: 400});\r\n\r\n        return {body: {}, headers: {}, ok: true, status: 400};\r\n    }\r\n\r\n    public idGet({elementName}: { elementName: string }): string\r\n    {\r\n        return `${new this.$String(this.$options.name as string).caseTrainTo()}-${new this.$String(elementName).caseTrainTo()}${typeof this.id !== `undefined` ? `-${this.id}`\r\n            : ``}`;\r\n    }\r\n\r\n    public invalidOn(): void\r\n    {\r\n        this.alertShow({alertType: `invalid`, state: `failed`});\r\n    }\r\n\r\n    public lengthValidityGet({element: {length, value}}: { element: FormElement }): boolean\r\n    {\r\n        return new this.$Range(length.min, length.max).includes(value.toString().length);\r\n    }\r\n\r\n    public propertiesUpdate({element, inputting = true, props}: { element: FormElement, inputting?: boolean, props: { [s: string]: any } }): void\r\n    {\r\n        Object.entries(props).forEach(([prop, value]) =>\r\n        {\r\n            element.inputting = inputting;\r\n            element[prop] = value;\r\n            this.computedPropertiesUpdate({element});\r\n        });\r\n    }\r\n\r\n    public responseOn(res: { headers: {}; body: {}; ok: boolean; status: number }): void\r\n    {\r\n    }\r\n\r\n    public submitOn(): void\r\n    {\r\n        this.formSubmit({auth: Boolean(this.auth), categoryInclude: Boolean(this.categoryInclude)}).catch(console.error);\r\n    }\r\n\r\n    public urlFullGet({tableName = this.tableName, url = this.url}: {\r\n        tableName?: string,\r\n        url?: string\r\n    } = {}): string\r\n    {\r\n        return `https://api.${this.hostname}/${tableName}${url ? `/${url}` : ``}`;\r\n    }\r\n\r\n    // eslint-disable-next-line no-empty-pattern\r\n    public validityGet({}: { element: FormElement }): boolean\r\n    {\r\n        return true;\r\n    }\r\n\r\n    public validate(): void\r\n    {\r\n        Object.values(this.elements).forEach((element) =>\r\n        {\r\n            element.inputting = false;\r\n            this.computedPropertiesUpdate({element});\r\n        });\r\n    }\r\n\r\n    public alertTypes: { [s: string]: (element: FormElement) => boolean } = {\r\n        empty(element)\r\n        {\r\n            return element.required && element.emptyIs();\r\n        },\r\n        invalid({validateRegex, value})\r\n        {\r\n            return !validateRegex.test(value);\r\n        },\r\n        long({length, value})\r\n        {\r\n            return value.length > length.max;\r\n        },\r\n        notFound({taken})\r\n        {\r\n            return !taken;\r\n        },\r\n        short(element)\r\n        {\r\n            return !(!element.required && element.emptyIs()) && element.value.length < element.length.min;\r\n        },\r\n        taken({taken, type, valueDefault, value})\r\n        {\r\n            return taken && type !== `password` && value !== valueDefault;\r\n        }\r\n    };\r\n\r\n    public alertTypesActive: string[] = [`short`, `long`, `invalid`, `empty`];\r\n    public auth!: boolean;\r\n    public categoryInclude!: boolean;\r\n    public elements: { [s: string]: FormElement } = {};\r\n    public elementsExtra: { [s: string]: FormElement } = {};\r\n    public formData: { [s: string]: any } = {};\r\n    public id!: string | number;\r\n    public method: 'post' | 'get' | 'patch' | 'delete' = `post`;\r\n    public tableName!: string;\r\n    public url!: string;\r\n\r\n    public get elementsAll()\r\n    {\r\n        return {...this.elements, ...this.elementsExtra};\r\n    }\r\n\r\n    public get valid(): boolean\r\n    {\r\n        return !Object.entries(this.elementsAll).filter(([, element]) =>\r\n        {\r\n            return element.required;\r\n        }).some(([elementName, element]) =>\r\n        {\r\n            return !element.valid && elementName !== `password`;\r\n        });\r\n    }\r\n\r\n    public elementsCreate(elements: { [s: string]: Partial<FormElement> }): { [s: string]: FormElement }\r\n    {\r\n        const defaults = {\r\n            alertType: ``,\r\n            autocomplete: {\r\n                default: `off`,\r\n                email: `email`,\r\n                password: `password`\r\n            },\r\n            checking: false,\r\n            emptyIs()\r\n            {\r\n                // @ts-ignore\r\n                return this.value === `` || this.value === `\\u2002`;\r\n            },\r\n            errorShow: false,\r\n            input: {\r\n                boolean: `checkbox`,\r\n                default: `text`,\r\n                email: `email`,\r\n                float: `number`,\r\n                integer: `number`,\r\n                password: `password`\r\n            },\r\n            inputting: false,\r\n            length: {\r\n                default: {min: 0, max: 128},\r\n                email: {min: 0, max: 64},\r\n                fbLink: {min: 25, max: 256},\r\n                message: {min: 0, max: 1024},\r\n                password: {min: 6, max: 64},\r\n                username: {min: 0, max: 32},\r\n                usernamesInGamePs: {min: 3, max: 16},\r\n                usernamesInGamePc: {min: 4, max: 16},\r\n                usernamesInGameXbox: {min: 3, max: 16}\r\n            },\r\n            prefix: {\r\n                default: ``,\r\n                fbLink: `https://facebook.com/`\r\n            },\r\n            required: true,\r\n            sendable: true,\r\n            tag: `input`,\r\n            taken: {\r\n                default: false,\r\n                password: true\r\n            },\r\n            type: `any`,\r\n            valid: `\\${!element.required}`,\r\n            validLength: true,\r\n            validateRegex: {\r\n                id: /^([-]?\\d|NaN)+$/,\r\n                idUsername: /^([-]?\\d|NaN)+$/,\r\n                alphabetical: /^([a-z]| )+$/i,\r\n                alphabeticalExtended: /^([\\u0041-\\u005a]|[\\u00c0-\\u024f]| )+$/i,\r\n                alphanumerical: /^(\\w+| )$/i,\r\n                alphanumericalExtended: /^(\\d|[\\u0041-\\u005a]|[\\u00c0-\\u024f]| )+$/i,\r\n                any: /^(.*)$/,\r\n                boolean: /^(true|false)$/,\r\n                default: /^(.*)$/,\r\n                email: /^(([^<>()\\\\.,;:\\s@\"]+(\\.[^<>()\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                fbLink: /^((http|https):\\/\\/)(www\\.)?(facebook\\.com)(\\/)?([^\\W_]|\\.){5,}$/,\r\n                float: /^([-]?\\d[.\\d+]?|NaN)+$/,\r\n                hexadecimal: /[0-9a-f]+/i,\r\n                integer: /^([-]?\\d|NaN)+$/,\r\n                username: /^(\\d|[\\u0041-\\u005a]|[\\u00c0-\\u024f]| |_|-)+$/i,\r\n                usernamesInGamePc: /^(\\w|-|_)+$/i,\r\n                usernamesInGamePs: /^(\\w|-|_)+$/i,\r\n                usernamesInGameXbox: /^(.*)+$/i\r\n            },\r\n            value: {\r\n                boolean: false,\r\n                default: ``\r\n            },\r\n            visibility: true\r\n        };\r\n\r\n        Object.entries(elements).forEach(([elementName, element]) =>\r\n        {\r\n            this.$set(element, `name`, elementName);\r\n\r\n            Object.entries(defaults).filter(([prop, defaultValue]) =>\r\n            {\r\n                // @ts-ignore\r\n                return !/^\\${(.*)}$/.test(defaultValue) && typeof element[prop] === `undefined`;\r\n            }).forEach(([prop, defaultValue]) =>\r\n            {\r\n                if (typeof defaultValue === `object`)\r\n                {\r\n                    this.$set(element, prop, Object.keys(defaultValue).includes(element.type as string) ? defaultValue[element.type as string] : defaultValue.default);\r\n                    return;\r\n                }\r\n\r\n                this.$set(element, prop, defaultValue);\r\n            });\r\n\r\n            this.formDataUpdate({element: element as FormElement});\r\n\r\n            Object.entries(defaults).filter(([, defaultValue]) =>\r\n            {\r\n                // @ts-ignore\r\n                return /^\\${(.*)}$/.test(defaultValue);\r\n            }).forEach(([prop, defaultValue]) =>\r\n            {\r\n                const valueNew = (() =>\r\n                {\r\n                    if (prop === `valid`)\r\n                    {\r\n                        return element.required ? this.validityGet({element: element as FormElement}) : true;\r\n                    }\r\n\r\n                    // eslint-disable-next-line no-eval\r\n                    return eval((defaultValue as string).replace(`\\${`, ``).match(/(.*)(?=})/)?.[0] || ``);\r\n                })();\r\n\r\n                this.$set(element, prop, valueNew);\r\n            });\r\n        });\r\n\r\n        return elements as { [s: string]: FormElement };\r\n    }\r\n}\r\n"],"sourceRoot":""}